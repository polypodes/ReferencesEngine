imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: sonata.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    form:
        resources:
            - 'SonataFormatterBundle:Form:formatter.html.twig'
            # - 'SonataMediaBundle:Form:media_widgets.html.twig'
            # - 'ApplicationRefactorReferenceBundle:Form:fields.html.twig'
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'
# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        entity_managers:
            default:
                mappings:
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    ApplicationRefactorReferenceBundle: ~


# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm

services:
    application.refactor.reference.admin.fiche:
        class: Application\Refactor\ReferenceBundle\Admin\FicheAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Content", label: "References" }
        arguments:
            - ~
            - Application\Refactor\ReferenceBundle\Entity\Fiche
            - ~
        calls:
            - [ setTranslationDomain, [ApplicationRefactorReferenceBundle]]
            - [ setTemplate, [list, ApplicationRefactorReferenceBundle:Fiche:list.html.twig]]
            - [ setTemplate, [orm_one_to_many, ApplicationRefactorReferenceBundle:Fiche:list_orm_one_to_many.html.twig]]


    application.refactor.reference.admin.fiche_render:
        class: Application\Refactor\ReferenceBundle\Admin\FicheRenderAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Content", label: "FicheRender", show_in_dashboard: false }
        arguments:
            - ~
            - Application\Refactor\ReferenceBundle\Entity\FicheRender
            - ~
        calls:
            - [ setTranslationDomain, [ApplicationRefactorReferenceBundle]]

    application.refactor.reference.admin.fiche_media:
        class: Application\Refactor\ReferenceBundle\Admin\FicheMediaAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Content", label: "FicheMedia", show_in_dashboard: false }
        arguments:
            - ~
            - Application\Refactor\ReferenceBundle\Entity\FicheMedia
            - ~
        calls:
            - [ setTranslationDomain, [ApplicationRefactorReferenceBundle]]

    application.refactor.reference.admin.tag:
        class: Application\Refactor\ReferenceBundle\Admin\TagAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Content", label: "Tags" }
        arguments:
            - ~
            - Application\Refactor\ReferenceBundle\Entity\Tag
            - ~
        calls:
            - [ setTranslationDomain, [ApplicationRefactorReferenceBundle]]

    application.refactor.reference.admin.fiche_tag:
        class: Application\Refactor\ReferenceBundle\Admin\FicheTagAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Content", label: "FicheTag", show_in_dashboard: false }
        arguments:
            - ~
            - Application\Refactor\ReferenceBundle\Entity\FicheTag
            - ~
        calls:
            - [ setTranslationDomain, [ApplicationRefactorReferenceBundle]]

    application_refactor_reference.admin.book:
        class: Application\Refactor\ReferenceBundle\Admin\BookAdmin
        arguments:
            - ~
            - Application\Refactor\ReferenceBundle\Entity\Book
            - ~
        tags:
            - {name: sonata.admin, manager_type: orm, group: "Content", label: "Books"}
        calls:
            - [ setTranslationDomain, [ApplicationRefactorReferenceBundle]]
            - [ setTemplate, [list, ApplicationRefactorReferenceBundle:Book:list.html.twig]]

    application_refactor_reference.admin.fiche_book:
        class: Application\Refactor\ReferenceBundle\Admin\FicheBookAdmin
        arguments:
            - ~
            - Application\Refactor\ReferenceBundle\Entity\FicheBook
            - ~
        tags:
            - {name: sonata.admin, manager_type: orm, group: "Content", label: "FicheBook", show_in_dashboard: false}
        calls:
            - [ setTranslationDomain, [ApplicationRefactorReferenceBundle]]


genemu_form:
    date: ~
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            formats:
                small: { width: 100 , quality: 70}
                thumbnail: { width: 320 , quality: 70}
                big:   { width: 500 , quality: 70}
fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        view_response_listener: force
    body_converter:
        enabled: true
        validate: true

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }
    request: { converters: true }

nelmio_api_doc: ~
knp_snappy:
    pdf:
        enabled:    true
        binary:     /usr/bin/wkhtmltopdf
        options:    []
